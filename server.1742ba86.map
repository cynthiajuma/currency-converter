{"version":3,"sources":["server.js"],"names":["maxMessages","compressor","compression","flush","zlib","Z_PARTIAL_FLUSH","appServerPath","os","platform","Date","now","connectionProperties","perfect","bps","delay","slow","imgSizeToFlickrSuffix","findIndex","arr","func","i","length","Server","port","_app","express","_messages","_sockets","_serverUp","_appServerUp","_port","_connectionType","_connections","_appServer","http","createServer","_exposedServer","net","_wss","WebSocketServer","server","path","staticOptions","maxAge","on","_onServerConnection","socket","_onWsConnection","ws","use","static","req","res","sendFile","resolve","get","send","indexTemplate","scripts","content","postsTemplate","map","postTemplate","item","join","flickrUrl","params","farm","id","secret","type","flickrRequest","request","flickrRes","pipe","root","__dirname","end","set","status","ok","remoteExecutorTemplate","idbTestTemplate","generateReady","then","time","msg","generateMessage","timeDiff","random","toISOString","push","_generateDelayedMessages","setTimeout","_addMessage","obj","JSON","stringify","forEach","err","console","error","closed","splice","indexOf","log","connection","makeConnection","appSocket","connect","Throttle","requestUrl","url","parse","upgradeReq","query","sendNow","since","sinceDate","Number","missedMessages","slice","message","unshift","pop","_broadcast","listen","fs","existsSync","unlinkSync","c","destroy","_destroyConnections","close","_listen"],"mappings":"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","file":"server.1742ba86.map","sourceRoot":"..","sourcesContent":["const maxMessages = 30;\nconst compressor = compression({\n  flush: zlib.Z_PARTIAL_FLUSH\n});\n\nconst appServerPath = os.platform() == 'win32' ?\n  '\\\\\\\\.\\\\pipe\\\\offlinefirst' + Date.now() + '.sock' :\n  'offlinefirst.sock';\n\nconst connectionProperties = {\n  perfect: {bps: 100000000, delay: 0},\n  slow: {bps: 4000, delay: 3000},\n  'lie-fi': {bps: 1, delay: 10000}\n};\n\nconst imgSizeToFlickrSuffix = {\n  '1024px': 'b',\n  '800px': 'c',\n  '640px': 'z',\n  '320px': 'n'\n};\n\nfunction findIndex(arr, func) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i], i, arr)) return i;\n  }\n  return -1;\n}\n\nexport default class Server {\n  constructor(port) {\n    this._app = express();\n    this._messages = [];\n    this._sockets = [];\n    this._serverUp = false;\n    this._appServerUp = false;\n    this._port = port;\n    this._connectionType = '';\n    this._connections = [];\n\n    this._appServer = http.createServer(this._app);\n    this._exposedServer = net.createServer();\n\n    this._wss = new WebSocketServer({\n      server: this._appServer,\n      path: '/updates'\n    });\n    \n    const staticOptions = {\n      maxAge: 0\n    };\n\n    this._exposedServer.on('connection', socket => this._onServerConnection(socket));\n    this._wss.on('connection', ws => this._onWsConnection(ws));\n\n    this._app.use(compressor);\n    this._app.use('/js', express.static('../public/js', staticOptions));\n    this._app.use('/css', express.static('../public/css', staticOptions));\n    this._app.use('/sw.js', (req, res) => res.sendFile(path.resolve('../public/sw.js'), staticOptions));\n    this._app.use('/manifest.json', (req, res) => res.sendFile(path.resolve('../public/manifest.json'), staticOptions));\n\n    this._app.get('/', (req, res) => {\n      res.send(indexTemplate({\n        scripts: '<script src=\"/js/main.js\" defer></script>',\n        content: postsTemplate({\n          content: this._messages.map(item => postTemplate(item)).join('')\n        })\n      }));\n    });\n\n    this._app.get('/skeleton', (req, res) => {\n      res.send(indexTemplate({\n        scripts: '<script src=\"/js/main.js\" defer></script>',\n        content: postsTemplate()\n      }));\n    });\n\n    this._app.get('/photos/:farm-:server-:id-:secret-:type.jpg', (req, res) => {\n      const flickrUrl = `http://farm${req.params.farm}.staticflickr.com/${req.params.server}/${req.params.id}_${req.params.secret}_${imgSizeToFlickrSuffix[req.params.type]}.jpg`;\n      const flickrRequest = http.request(flickrUrl, flickrRes => {\n        flickrRes.pipe(res);\n      });\n\n      flickrRequest.on('error', err => {\n        // TODO: use a real flickr image as a fallback\n        res.sendFile('imgs/icon.png', {\n          root: __dirname + '/../public/'\n        });\n      });\n\n      flickrRequest.end();\n    });\n\n    this._app.get('/ping', (req, res) => {\n      res.set('Access-Control-Allow-Origin', '*');\n      res.status(200).send({ok: true});\n    });\n\n    this._app.get('/remote', (req, res) => {\n      res.send(remoteExecutorTemplate());\n    });\n\n    this._app.get('/idb-test/', (req, res) => {\n      res.send(idbTestTemplate());\n    });\n\n    generateReady.then(_ => {\n      // generate initial messages\n      let time = new Date();\n\n      for (let i = 0; i < maxMessages; i++) {\n        const msg = generateMessage();\n        const timeDiff = random(5000, 15000);\n        time = new Date(time - timeDiff);\n        msg.time = time.toISOString();\n        this._messages.push(msg);\n      }\n\n      this._generateDelayedMessages();\n    });\n  }\n\n  _generateDelayedMessages() {\n    setTimeout(_ => {\n      this._addMessage();\n      this._generateDelayedMessages();\n    }, random(5000, 15000));\n  }\n\n  _broadcast(obj) {\n    const msg = JSON.stringify(obj);\n    this._sockets.forEach(socket => {\n      socket.send(msg, (err) => {\n        if (err) console.error(err);\n      });\n    });\n  }\n\n  _onServerConnection(socket) {\n    let closed = false;\n    this._connections.push(socket);\n\n    socket.on('close', _ => {\n      closed = true;\n      this._connections.splice(this._connections.indexOf(socket), 1);\n    });\n\n    socket.on('error', err => console.log(err));\n\n    const connection = connectionProperties[this._connectionType];\n    const makeConnection = _ => {\n      if (closed) return;\n      const appSocket = net.connect(appServerPath);\n      appSocket.on('error', err => console.log(err));\n      socket.pipe(new Throttle(connection.bps)).pipe(appSocket);\n      appSocket.pipe(new Throttle(connection.bps)).pipe(socket);\n    };\n\n    if (connection.delay) {\n      setTimeout(makeConnection, connection.delay);\n      return;\n    }\n    makeConnection();\n  }\n\n  _onWsConnection(socket) {\n    const requestUrl = url.parse(socket.upgradeReq.url, true);\n\n    if ('no-socket' in requestUrl.query) return; \n\n    this._sockets.push(socket);\n\n    socket.on('close', _ => {\n      this._sockets.splice(this._sockets.indexOf(socket), 1);\n    });\n\n    let sendNow = [];\n\n    if (requestUrl.query.since) {\n      const sinceDate = new Date(Number(requestUrl.query.since));\n      let missedMessages = findIndex(this._messages, msg => new Date(msg.time) <= sinceDate);\n      if (missedMessages == -1) missedMessages = this._messages.length;\n      sendNow = this._messages.slice(0, missedMessages);\n    }\n    else {\n      sendNow = this._messages.slice();\n    }\n\n    if (sendNow.length) {\n      socket.send(JSON.stringify(sendNow));\n    }\n  }\n\n  _addMessage() {\n    const message = generateMessage();\n    this._messages.unshift(message);\n    this._messages.pop();\n    this._broadcast([message]);\n  }\n\n  _listen() {\n    this._serverUp = true;\n    this._exposedServer.listen(this._port, _ => {\n      console.log(\"Server listening at localhost:\" + this._port);\n    });\n\n    if (!this._appServerUp) {\n      if (fs.existsSync(appServerPath)) fs.unlinkSync(appServerPath);\n      this._appServer.listen(appServerPath);\n      this._appServerUp = true;\n    }\n  }\n\n  _destroyConnections() {\n    this._connections.forEach(c => c.destroy());\n  }\n\n  setConnectionType(type) {\n    if (type === this._connectionType) return;\n    this._connectionType = type;\n    this._destroyConnections();\n\n    if (type === 'offline') {\n      if (!this._serverUp) return;\n      this._exposedServer.close();\n      this._serverUp = false;\n      return;\n    }\n\n    if (!this._serverUp) {\n      this._listen();\n    }\n  }\n}"]}